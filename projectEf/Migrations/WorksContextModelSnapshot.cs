// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEf;

#nullable disable

namespace projectEf.Migrations
{
    [DbContext(typeof(WorksContext))]
    partial class WorksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projectEf.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("11d14284-1d76-493f-8b12-9cd72c81cfe4"),
                            Name = "pending activities",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("0af42020-57e2-4b2d-a666-a579268e75b5"),
                            Name = "personal activities",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("projectEf.Models.Work", b =>
                {
                    b.Property<Guid>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("WorkPriority")
                        .HasColumnType("int");

                    b.HasKey("WorkId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            WorkId = new Guid("11d14284-1d76-493f-8b12-9cd72c81cfe4"),
                            CategoryId = new Guid("11d14284-1d76-493f-8b12-9cd72c81cfe4"),
                            CreationDate = new DateTime(2023, 3, 5, 14, 42, 21, 984, DateTimeKind.Local).AddTicks(816),
                            Title = "payment of public services",
                            WorkPriority = 1
                        },
                        new
                        {
                            WorkId = new Guid("11d14284-1d76-493f-8b12-9cd72c81cf10"),
                            CategoryId = new Guid("0af42020-57e2-4b2d-a666-a579268e75b5"),
                            CreationDate = new DateTime(2023, 3, 5, 14, 42, 21, 984, DateTimeKind.Local).AddTicks(830),
                            Title = "finish watching a movie on netflix",
                            WorkPriority = 2
                        });
                });

            modelBuilder.Entity("projectEf.Models.Work", b =>
                {
                    b.HasOne("projectEf.Models.Category", "Category")
                        .WithMany("Works")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectEf.Models.Category", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
